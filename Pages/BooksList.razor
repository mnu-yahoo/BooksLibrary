@page "/books"
@inject NavigationManager NavManager
@inject BooksLibrary.Services.BooksService booksService
@using BooksLibrary.Data


<PageTitle>Liste des livres</PageTitle>

<h1>Liste de livres</h1>

<p>Ce composant affiche la liste des livres disponibles.</p>

@if (books == null)
{
        <p><em>Chargement...</em></p>
}
else
{
        <div>
            <InputSelect @bind-Value="searchContext">
                <option value="">
                </option>
                    <option checked="@(searchContext == "title")"
                        value="title">
                    Titre
                </option>
                    <option checked="@(searchContext == "subject")" 
                        value="subject">
                    Sujet
                </option>
                    <option checked="@(searchContext == "publisher")" 
                        value="publisher">
                    Editeur
                </option>
            </InputSelect>
            <InputText @bind-Value="filter"/>
            <button class="btn btn-primary" @onclick="SearchBooks">Search</button>
        </div>
        <table class="table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Titre</th>
                    <th>Editeur</th>
                    <th>Année</th>
                    <th>Sujet</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var book in books)
            {
                        <tr>
                            <td>@book.ID</td>
                            <td>@book.Title</td>
                            <td>@book.Publisher</td>
                            <td>@book.Year</td>
                            <td>@book.Subject</td>
                        </tr>
            }
            </tbody>
        </table>
}

@code {
    private List<Book>? books;
    private string filter;
    private string searchContext;

    protected override async Task OnInitializedAsync()
    {
        if (books == null)
            books = await booksService.GetBooks();
    }

    protected async void SearchBooks()
    {
        if (string.IsNullOrWhiteSpace(filter))
        {
            books = await booksService.GetBooks();
        }
        else
        {
            if (string.IsNullOrWhiteSpace(searchContext))
            {
                searchContext = "title";
            }
            books = await booksService.GetBooks(filter, searchContext);
        }
        StateHasChanged();
    }
}
